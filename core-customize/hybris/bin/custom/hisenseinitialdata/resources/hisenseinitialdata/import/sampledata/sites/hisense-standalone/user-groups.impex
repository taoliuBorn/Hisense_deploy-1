# -----------------------------------------------------------------------
# Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.
# -----------------------------------------------------------------------

$defaultPassword = 12341234
$defaultLanguage = en
$defaultCurrency = AUD
$defaultGroups = customergroup
$standaloneSiteUid = hisense-standalone
$siteEmployeeGroupUid = hisense-standalone-group

INSERT_UPDATE Customer; uid[unique = true]                            ; password[default = $defaultPassword]; name               ; site(uid)          ; customerId                           ; sessionLanguage(isocode)[default = $defaultLanguage]; sessionCurrency(isocode)[default = $defaultCurrency]; groups(uid)[default = $defaultGroups]; loginDisabled[default = true]
                      ; keenreviewer1@hybris.com|$standaloneSiteUid   ;                                     ; Kenneth Reviewer   ; $standaloneSiteUid ; f5d14d9f-39e5-4519-b64f-7fad4282b8f8 ;                                                     ;                                                     ;                                      ;
                      ; keenreviewer600@hybris.com|$standaloneSiteUid ;                                     ; Peter Reviewer     ; $standaloneSiteUid ; a6266321-83e3-42c5-b973-11e34a17c664 ;                                                     ;                                                     ;                                      ;
                      ; keenreviewer900@hybris.com|$standaloneSiteUid ;                                     ; Elizabeth Reviewer ; $standaloneSiteUid ; 742d968e-635f-4750-bfb0-189e1e40c789 ;                                                     ;                                                     ;                                      ;
                      ; keenreviewer901@hybris.com|$standaloneSiteUid ;                                     ; Dorothy Reviewer   ; $standaloneSiteUid ; 9dd7de31-9b60-48e9-b767-b22a9794f93f ;                                                     ;                                                     ;                                      ;
                      ; keenreviewer902@hybris.com|$standaloneSiteUid ;                                     ; George Reviewer    ; $standaloneSiteUid ; 91a797e4-f9c1-4177-8901-a2127a11440c ;                                                     ;                                                     ;                                      ;
                      ; keenreviewer903@hybris.com|$standaloneSiteUid ;                                     ; Henry Reviewer     ; $standaloneSiteUid ; 45be3681-dab0-455d-bf82-46ccf2d754d2 ;                                                     ;                                                     ;                                      ;
                      ; keenreviewer904@hybris.com|$standaloneSiteUid ;                                     ; Nicko Reviewer     ; $standaloneSiteUid ; 2494377d-0230-422f-9ebc-a306a052df9a ;                                                     ;                                                     ;                                      ;
                      ; keenreviewer905@hybris.com|$standaloneSiteUid ;                                     ; Kate Reviewer      ; $standaloneSiteUid ; 5fb50956-9e40-4a12-b6dd-6490fb7f0658 ;                                                     ;                                                     ;                                      ;
                      ; keenreviewer906@hybris.com|$standaloneSiteUid ;                                     ; Honda Reviewer     ; $standaloneSiteUid ; 4cefe0ef-c354-439a-b7f1-d2557e131b06 ;                                                     ;                                                     ;                                      ;
                      ; keenreviewer907@hybris.com|$standaloneSiteUid ;                                     ; Doris Reviewer     ; $standaloneSiteUid ; 82e0fd32-9329-4414-aeab-456c9daf7dad ;                                                     ;                                                     ;                                      ;
                      ; keenreviewer908@hybris.com|$standaloneSiteUid ;                                     ; Brendan Reviewer   ; $standaloneSiteUid ; ba2ad9f6-ae21-4ce2-a1ed-ab6fded2ce5a ;                                                     ;                                                     ;                                      ;
                      ; keenreviewer909@hybris.com|$standaloneSiteUid ;                                     ; Ken Reviewer       ; $standaloneSiteUid ; 192795d1-5dd7-4f0c-ae51-8a1165088430 ;                                                     ;                                                     ;                                      ;
                      ; keenreviewer910@hybris.com|$standaloneSiteUid ;                                     ; Deepak Reviewer    ; $standaloneSiteUid ; 459721bc-1d20-48ac-b2a1-b66c36a8e3ee ;                                                     ;                                                     ;                                      ;
                      ; keenreviewer911@hybris.com|$standaloneSiteUid ;                                     ; John Reviewer      ; $standaloneSiteUid ; cf24186e-9ead-41bd-97f0-0feb50f31cdd ;                                                     ;                                                     ;                                      ;
                      ; keenreviewer912@hybris.com|$standaloneSiteUid ;                                     ; Rick Reviewer      ; $standaloneSiteUid ; 6f561dd0-a35c-4b38-9d39-6765d3b66b69 ;                                                     ;                                                     ;                                      ;
                      ; keenreviewer913@hybris.com|$standaloneSiteUid ;                                     ; Axel Reviewer      ; $standaloneSiteUid ; ea0f844a-064c-405e-9b01-a1997d91014b ;                                                     ;                                                     ;                                      ;
                      ; keenreviewer914@hybris.com|$standaloneSiteUid ;                                     ; Flavia Reviewer    ; $standaloneSiteUid ; dbcdf263-ac7a-4ca1-b1ce-62a14ca6f4f0 ;                                                     ;                                                     ;                                      ;

INSERT_UPDATE SiteEmployeeGroup; uid[unique = true]    ; visibleSite(uid)   ; groups(uid)
                               ; $siteEmployeeGroupUid ; $standaloneSiteUid ; multisitegroup ;

INSERT_UPDATE Employee; uid[unique = true]                                  ; groups(uid)                                              ; password[default = $defaultPassword]; loginDisabled[default = true]
"#%beforeEach:
import de.hybris.platform.core.Registry;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import de.hybris.platform.util.Config;

Logger LOG = LoggerFactory.getLogger(""ImpExImportReader"");
extensionNames = Registry.getCurrentTenant().getTenantSpecificExtensionNames();
extensionName = ""customersupportbackoffice"";
if(!extensionNames.contains(extensionName))
{
    LOG.info(""Employee [{}] was skipped because the extension customersupportbackoffice is not included in the setup"", line.get(1));
    line.clear();
    break;

}"
                      ; CustomerSupportAdministrator-electronics-standalone ; customersupportadministratorgroup, $siteEmployeeGroupUid ;                                     ;
                      ; CustomerSupportManager-electronics-standalone       ; customersupportmanagergroup, $siteEmployeeGroupUid       ;                                     ;
                      ; CustomerSupportAgent-electronics-standalone         ; customersupportagentgroup, $siteEmployeeGroupUid         ;                                     ;

INSERT_UPDATE Employee; UID[unique = true]               ; groups(uid)[mode = append]                               ; password[default = $defaultPassword]; loginDisabled[default = true]
"#%beforeEach:
import de.hybris.platform.core.Registry;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import de.hybris.platform.util.Config;

Logger LOG = LoggerFactory.getLogger(""ImpExImportReader"");
extensionNames = Registry.getCurrentTenant().getTenantSpecificExtensionNames();
extensionName = ""customersupportbackoffice"";
if(!extensionNames.contains(extensionName))
{
    LOG.info(""Employee [{}] was skipped because the extension customersupportbackoffice is not included in the setup"", line.get(1));
    line.clear();
    break;

}"
                      ; CustomerSupportAdministrator-all ; customersupportadministratorgroup, $siteEmployeeGroupUid ;                                     ;
                      ; CustomerSupportManager-all       ; customersupportmanagergroup, $siteEmployeeGroupUid       ;                                     ;
                      ; CustomerSupportAgent-all         ; customersupportagentgroup, $siteEmployeeGroupUid         ;                                     ;

INSERT_UPDATE PrincipalGroupRelation; source(uid)[unique = true]                    ; target(uid)[unique = true]
"#%beforeEach:
import de.hybris.platform.core.Registry;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import de.hybris.platform.util.Config;

Logger LOG = LoggerFactory.getLogger(""ImpExImportReader"");
extensionNames = Registry.getCurrentTenant().getTenantSpecificExtensionNames();
    if(!extensionNames.contains(""customersupportbackoffice"") ||  !extensionNames.contains(""assistedserviceservices""))
    {
        LOG.info(""Sample data for assistedserviceservices was skipped because the extensions are not included in the setup"");
        line.clear();
    }
"
                                    ; asagent-electronics-standalone                ; nakanostoreemployees
                                    ; asagent-electronics-standalone                ; ichikawastoreemployees
                                    ; keenreviewer900@hybris.com|$standaloneSiteUid ; POS_NAKANO
                                    ; keenreviewer901@hybris.com|$standaloneSiteUid ; POS_ICHIKAWA

INSERT_UPDATE Employee; uid[unique = true]                   ; groups(uid)                                                           ; loginDisabled[default = true]
"#%beforeEach:
import de.hybris.platform.core.Registry;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import de.hybris.platform.util.Config;

Logger LOG = LoggerFactory.getLogger(""ImpExImportReader"");
extensionNames = Registry.getCurrentTenant().getTenantSpecificExtensionNames();
    if(!extensionNames.contains(""customersupportbackoffice"") ||  !extensionNames.contains(""assistedserviceservices""))
    {
        LOG.info(""Sample data for assistedserviceservices was skipped because the extensions are not included in the setup"");
        line.clear();
    }
"
                      ; asagent-electronics-standalone        ; asagentsalesmanagergroup, customermanagergroup, $siteEmployeeGroupUid ;
                      ; asagentsales-electronics-standalone   ; asagentsalesgroup, $siteEmployeeGroupUid                              ;
                      ; asagentmanager-electronics-standalone ; asagentsalesmanagergroup, $siteEmployeeGroupUid                       ;

INSERT_UPDATE Employee; UID[unique = true] ; groups(uid)[mode = append]                                            ; loginDisabled[default = true]
"#%beforeEach:
import de.hybris.platform.core.Registry;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import de.hybris.platform.util.Config;

Logger LOG = LoggerFactory.getLogger(""ImpExImportReader"");
extensionNames = Registry.getCurrentTenant().getTenantSpecificExtensionNames();
    if(!extensionNames.contains(""customersupportbackoffice"") ||  !extensionNames.contains(""assistedserviceservices""))
    {
        LOG.info(""Sample data for assistedserviceservices was skipped because the extensions are not included in the setup"");
        line.clear();
    }
"
                      ; asagent-all        ; asagentsalesmanagergroup, customermanagergroup, $siteEmployeeGroupUid ;
                      ; asagentsales-all   ; asagentsalesgroup, $siteEmployeeGroupUid                              ;
                      ; asagentmanager-all ; asagentsalesmanagergroup, $siteEmployeeGroupUid                       ;

INSERT_UPDATE CustomerList; uid[unique = true]; implementationType; priority; members(uid)[mode = append]                ;
"#%beforeEach:
import de.hybris.platform.core.Registry;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import de.hybris.platform.util.Config;

Logger LOG = LoggerFactory.getLogger(""ImpExImportReader"");
extensionNames = Registry.getCurrentTenant().getTenantSpecificExtensionNames();
    if(!extensionNames.contains(""customersupportbackoffice"") ||  !extensionNames.contains(""assistedserviceservices""))
    {
        LOG.info(""Sample data for assistedserviceservices was skipped because the extensions are not included in the setup"");
        line.clear();
    }
"
                          ; instoreCustomers  ; "IN_STORE"        ; 3       ; asagent-all, asagent-electronics-standalone ;
                          ; bopisCustomers    ; "BOPIS"           ; 2       ; asagent-all, asagent-electronics-standalone ;
 